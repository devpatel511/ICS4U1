/** * This program will remove all values of a given int/double value from a given array * and return a new array with the elements removed. * The method is overloaded and can accept an int array and a double array. * For example, * input: [5, 7, 2, 7, 9, 1, 4], 7 * returns: [5, 2, 9, 1, 4] * @author Dev Patel * Date Last Modified Dec. 14th, 2020 */ class RemoveElements{   public static void main(String[] args)   {      System.out.println("Testing removeElements(int[] arr, int n)");      int[] testCase1IntArray = {10, 7, 9, 3, 10, 33};      int testCase1IntValue = 10;      int[] testCase1NewIntArray = removeElements(testCase1IntArray, testCase1IntValue);                 System.out.print("TEST CASE 1...  ");      printArray(testCase1IntArray);      System.out.println("The result should be {7, 9, 3, 33}");      System.out.println("The program gives the results...");      printArray(testCase1NewIntArray);            int[] testCase2IntArray = {5, 7, 2, 7, 9, 1, 4};      int testCase2IntValue = 7;      int[] testCase2NewIntArray = removeElements(testCase2IntArray, testCase2IntValue);            System.out.print("TEST CASE 2...  ");      printArray(testCase2IntArray);      System.out.println("The result should be {5, 2, 9, 1, 4}");      System.out.println("The program gives the results...");      printArray(testCase2NewIntArray);            System.out.println();            System.out.println("Testing removeElements(double[] arr, double n)");      double[] testCase1DoubleArray = {4.0, 7, 9.2, 3.5, 10.3, 10.3};      double testCase1DoubleValue = 10.3;      double[] testCase1NewDoubleArray = removeElements(testCase1DoubleArray, testCase1DoubleValue);                 System.out.print("TEST CASE 1...  ");      printArray(testCase1DoubleArray);      System.out.println("The result should be {4.0, 7.0, 9.2, 3.5}");      System.out.println("The program gives the results...");      printArray(testCase1NewDoubleArray);            double[] testCase2DoubleArray = {5, 7.9, 14.2, 11.7, 9.1, 13};      double testCase2DoubleValue = 14.2;      double[] testCase2NewDoubleArray = removeElements(testCase2DoubleArray, testCase2DoubleValue);            System.out.print("TEST CASE 2...  ");      printArray(testCase2DoubleArray);      System.out.println("The result should be {5.0, 7.9, 11.7, 9.1, 13.0}");      System.out.println("The program gives the results...");      printArray(testCase2NewDoubleArray);   }        /**    * This method will return an int array with the elements of a given int value removed    * from a given int double array    * @param arr the given int array    * @param n the given int value    * @return a new int array with the elements of n removed from arr      */   public static int[] removeElements(int[] arr, int n)   {      int numOfNValues = 0; // number of values of n      for(int i = 0; i < arr.length; i++){         if(arr[i] == n){            numOfNValues++;         }      }            int[] newArr = new int[arr.length-numOfNValues];      int arrIndex = 0; // indices for int[] arr      for(int i = 0; i < newArr.length; i++){         while(arr[arrIndex] == n){            arrIndex++;         }                  newArr[i] = arr[arrIndex];         arrIndex++;      }            return newArr;   }     /**    * This method will return a double array with the elements of a given double value removed    * from a given double array    * @param arr the given double array    * @param n the given double value    * @return a new double array with the elements of n removed from arr    */   public static double[] removeElements(double[] arr, double n)   {      int numOfNValues = 0; // number of values of n      for(int i = 0; i < arr.length; i++){         if(arr[i] == n){            numOfNValues++;         }      }            double[] newArr = new double[arr.length-numOfNValues];      int arrIndex = 0; // indices for double[] arr      for(int i = 0; i < newArr.length; i++){         while(arr[arrIndex] == n){            arrIndex++;         }                  newArr[i] = arr[arrIndex];         arrIndex++;      }            return newArr;   }      /**    * This method prints an integer array in the format {1, 2, 3, 4, 5, 6}    * @param a the array we would like to print    */   public static void printArray(int[] a)   {      System.out.print("{");      for(int i = 0; i < a.length-1; i++)      {         System.out.print(a[i] + ", ");      }      System.out.println(a[a.length-1] +"}");   }      /**    * This method prints a double array in the format {1.0, 2.0, 3.0, 4.0, 5.0, 6.0}    * @param a the array we would like to print    */   public static void printArray(double[] a)   {      System.out.print("{");      for(int i = 0; i < a.length-1; i++)      {         System.out.print(a[i] + ", ");      }      System.out.println(a[a.length-1] +"}");   }}